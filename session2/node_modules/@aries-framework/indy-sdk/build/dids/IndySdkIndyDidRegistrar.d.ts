import type { IndyEndpointAttrib } from './didSovUtil';
import type { AgentContext, Buffer, DidCreateOptions, DidCreateResult, DidDeactivateResult, DidRegistrar, DidUpdateResult } from '@aries-framework/core';
import type { NymRole } from 'indy-sdk';
export declare class IndySdkIndyDidRegistrar implements DidRegistrar {
    readonly supportedMethods: string[];
    create(agentContext: AgentContext, options: IndySdkIndyDidCreateOptions): Promise<DidCreateResult>;
    update(): Promise<DidUpdateResult>;
    deactivate(): Promise<DidDeactivateResult>;
    private registerPublicDid;
    private setEndpointsForDid;
}
interface IndySdkIndyDidCreateOptionsBase extends DidCreateOptions {
    didDocument?: never;
    options: {
        alias: string;
        role?: NymRole;
        verkey?: string;
        endpoints?: IndyEndpointAttrib;
        submitterDid: string;
    };
    secret?: {
        privateKey?: Buffer;
    };
}
interface IndySdkIndyDidCreateOptionsWithDid extends IndySdkIndyDidCreateOptionsBase {
    method?: never;
    did: string;
}
interface IndySdkIndyDidCreateOptionsWithoutDid extends IndySdkIndyDidCreateOptionsBase {
    method: 'indy';
    did?: never;
}
export type IndySdkIndyDidCreateOptions = IndySdkIndyDidCreateOptionsWithDid | IndySdkIndyDidCreateOptionsWithoutDid;
export {};
