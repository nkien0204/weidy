import type { AnonCredsHolderService, AnonCredsProof, CreateCredentialRequestOptions, CreateCredentialRequestReturn, CreateProofOptions, AnonCredsCredentialInfo, GetCredentialOptions, StoreCredentialOptions, GetCredentialsForProofRequestOptions, GetCredentialsForProofRequestReturn, CreateLinkSecretOptions, CreateLinkSecretReturn, GetCredentialsOptions } from '@aries-framework/anoncreds';
import type { AgentContext } from '@aries-framework/core';
import { IndySdk } from '../../types';
import { IndySdkRevocationService } from './IndySdkRevocationService';
export declare class IndySdkHolderService implements AnonCredsHolderService {
    private indySdk;
    private indyRevocationService;
    constructor(indyRevocationService: IndySdkRevocationService, indySdk: IndySdk);
    createLinkSecret(agentContext: AgentContext, options: CreateLinkSecretOptions): Promise<CreateLinkSecretReturn>;
    createProof(agentContext: AgentContext, options: CreateProofOptions): Promise<AnonCredsProof>;
    storeCredential(agentContext: AgentContext, options: StoreCredentialOptions): Promise<string>;
    getCredential(agentContext: AgentContext, options: GetCredentialOptions): Promise<AnonCredsCredentialInfo>;
    getCredentials(agentContext: AgentContext, options: GetCredentialsOptions): Promise<{
        credentialDefinitionId: string;
        attributes: {
            [key: string]: string;
        };
        credentialId: string;
        schemaId: string;
        credentialRevocationId: string | undefined;
        revocationRegistryId: string | undefined;
    }[]>;
    createCredentialRequest(agentContext: AgentContext, options: CreateCredentialRequestOptions): Promise<CreateCredentialRequestReturn>;
    deleteCredential(agentContext: AgentContext, credentialId: string): Promise<void>;
    getCredentialsForProofRequest(agentContext: AgentContext, options: GetCredentialsForProofRequestOptions): Promise<GetCredentialsForProofRequestReturn>;
    private fetchCredentialsForReferent;
    /**
     * Converts a public api form of {@link AnonCredsSelectedCredentials} interface into a format {@link Indy.IndyRequestedCredentials} that Indy SDK expects.
     **/
    private parseSelectedCredentials;
}
